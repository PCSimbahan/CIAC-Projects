/*
  This Reminder System Script was done by OJT Patrick on the year 2025 of January
  Prerequisites require:
    If you want to make the email sender flexible, make use of GmailApp.sendEmail(); In conjunction, you must set up different aliases into your gmail settings to make other emails recognizable.
    If you want to make use of MailApp.sendEmail and change the sender of the email, you must run the script with the account you want to send the email with.

    If you want to modify, improve and overhaul the script, you are free to do so. 

*/

const sheet = SpreadsheetApp.getActiveSpreadsheet().getActiveSheet(); //Gives access and retrieves the values of the spreadsheet 


//This tracks the deadline and status of the documents (deadline tracker)
function main(){
  const lstRw = sheet.getLastRow(); //Gets the Last Row of the column
  const dueColmnVal = sheet.getRange(10, 7, lstRw).getValues(); //Retrieves the values in row 10, column 7 (Due date column)
  const statusColmnVal = sheet.getRange(10, 8, lstRw).getValues(); //Retrieves the values in row 10, column 8 (Status column)
  let count = 0;
  let sender = "rbtemplado@gmail.com"; //Configure the sender of the email (set up in Gmail sa alias first)
  const currDate = new Date(); //Retrieves the date today by creating an object Date()
 
 
    //Iterates through the number of documents/projects 
    for (let i = 0; i < dueColmnVal.length; i++){
      const date = dueColmnVal[i][0]; //Iterates through dates in the due date/deadline column
      const status = statusColmnVal[i][0]; //Iterates through status in the status column
      const formattedStatus = Utilities.formatString("%s", status);//Formatting for the status to string
      const formattedCurrDate = Utilities.formatDate(currDate, "Asia/Manila", "yyyy-MM-dd"); //Formatted Due date to String
    
      //Executes if the data in the column date is equal to object Date, if not, skip;  
       if (Object.prototype.toString.call(date) === "[object Date]" && date !== "") {
          const formattedDdate = Utilities.formatDate(date, "Asia/Manila", "yyyy-MM-dd");
          //If the deadline is equal to the current date and the status is equal to pending, then the statement is true and will send email
          if(formattedDdate === formattedCurrDate && formattedStatus === "Pending"){
            count++;// if the project is due today (Date today) the count adds
          }
       }  
      }

      if(count > 0){
        sendEmail(sender, currDate, count);
      }
  }

//This function sends email; Transferring the data from Main function to sendEmail function to borrow values
function sendEmail(senderEmail, newCurrDate, projCount) {
  //projCount is the total due today 
  const completedVal = sheet.getRange(2,6).getValue();
  const pendingVal = sheet.getRange(3,6).getValue();// pendingVal is considered as the tasks to be done
  const dueDateVal = sheet.getRange(5,6).getValue();// dueDateVal is considered as the overdue projects
  const deptName = sheet.getRange(11,3).getValues();

  const currentDate = Utilities.formatDate(newCurrDate, "Asia/Manila", "EEEE, MMMM d, yyyy"); //Current date to show the Month Name, and day

  let subject = "Request for Updates on OPCEO Directives Tracker"; //Subject of the email
  let body = `Dear Sirs/Mesdames,

Good day!

This refers to the various instructions from the PCEO recorded in our OPCEO Directives Tracker, which is due today.

In this regard, may we kindly request updates on the status of these items? If there is a need to adjust the due dates, please inform OPCEO accordingly.

Date Today: ${currentDate}
Department: ${deptName}
Due Today: ${projCount} Pending
Overdue: ${dueDateVal}
Tasks: ${pendingVal}
Completed: ${completedVal}
Total: ${pendingVal + completedVal}

You may access the tracker via the following link: https://docs.google.com/spreadsheets/d/1m-7uTfglQcdo64C3P7l1KK-iBmLDuivn1WKqnu9FPbQ/edit?gid=1468352681#gid=1468352681

For any concerns, please feel free to contact Mr. Raymond Templado or Ms. Abet Tan at (045) 599-2888 loc. 100.

Thank you for your cooperation.

Best regards,
Office of the President and CEO
Clark International Airport Corporation`;
                  
  
  const lstRw = sheet.getLastRow(); //Retrieves the value of the last column that has value.
	  if(lstRw === 0){
		  Logger.log("This has no value");	
	  return;		
}

//retrieves the values of each cell
	  const emailVal = sheet.getRange(2,8, lstRw).getValues(); 

 // Looping statement that sends email to all the users listed in the column 
    for(let i = 0; i < emailVal.length; i++ ){
      const email = emailVal[i][0];

      if (typeof email === "string" && email.trim() !== "" && /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email)) {
        GmailApp.sendEmail(email, subject, body, {from: senderEmail});//Utilizing GmailApp to make use of the flexible format
        console.log(subject + " " + body);
        Logger.log("Email sent to " + email);
      }
    }
  }

function trigger(){
   // Create a time-based trigger to run the script daily
    ScriptApp.newTrigger("main")
    .timeBased()
    .everyDays(1)
    .atHour(8) // Adjust to your desired time (uses a 24-hour time format)
    .create();

}
