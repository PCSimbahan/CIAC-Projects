const dashSheet = SpreadsheetApp.getActiveSpreadsheet();
var newSheet = dashSheet.getSheetByName("Dashboard");

// This tracks the deadline and status of the documents (deadline tracker)
function mainV3() {
  if (newSheet.getName() !== "Dashboard") return; // Specifying which worksheet is to be affected by the script
  
  const lstRw = newSheet.getLastRow();
  const deptClmnVal = newSheet.getRange(9, 1, 55).getValues();
  const taskClmnVal = newSheet.getRange(9, 3, 55).getValues();
  const dueTdyClmnVal = newSheet.getRange(9,4,55).getValues();
  const ovrdueClmnVal = newSheet.getRange(9, 5, 55).getValues();
  const cmpltdClmnVal = newSheet.getRange(9,6, 55).getValues(); 

  let sender = "email@gmail.com";
  
  for (let i = 0; i < deptClmnVal.length; i++) {
    const taskCount = taskClmnVal[i][0];  // Task count from column
    const deptName = deptClmnVal[i][0];
    const dueTdy = dueTdyClmnVal[i][0];
    const overDue = ovrdueClmnVal[i][0];
    const completed = cmpltdClmnVal[i][0];

    if (deptName !== 0 && taskCount > 0) {
      
      // Find the department email(s) from the deptList dictionary
      const deptObj = deptList.find(item => item.department === deptName);
      
      if (deptObj) {
        const rcvEmail = deptObj.email;
        
        // If it's a single email
        if (typeof rcvEmail === "string") {
          sendEmail(sender, deptName, taskCount, dueTdy, overDue, completed, rcvEmail);
          //Logger.log(`${deptName}: ${rcvEmail}`);
        }
        
        // If it's an array of emails
        if (Array.isArray(rcvEmail)) {
          rcvEmail.forEach(mulEmail => {
            sendEmail(sender, deptName, taskCount, dueTdy, overDue, completed, mulEmail);
            //Logger.log(`${deptName}: ${mulEmail}`);
          });
        }
      }
    }
  }
}

function sendEmail(senderEmail, dptName, tskCount, due, ovr, complete, receiver) {
  const currDate = new Date();
  const currentDate = Utilities.formatDate(currDate, "Asia/Manila", "EEEE, MMMM d, yyyy"); 
  
  let subject = "OPCEO Documents Tracker"; // Subject of the email
  let body = `Dear Sirs/Mesdames
Good Day!

This pertains to various documents endorsed to your Department/Office with instructions from the OPCEO, as recorded in our OPCEO Documents Tracker, which are due today.

In this regard, we kindly request an update on the status of these documents. If there is a need to adjust the due dates, please inform the OPCEO accordingly.

Summary as of ${currentDate}
Department: ${dptName}
Due Today: ${due}
Overdue: ${ovr}
Documents in Progress: ${tskCount}
Completed: ${complete}

You may access the tracker via the following link: https://docs.google.com/spreadsheets/d/1IH15kMXpgJVEVr-sexi0HPzQZ3liHIxHlT50ImdLYMQ/edit?gid=1468352681#gid=1468352681`;

  // Send email if the email is valid
  if (typeof receiver === "string" && receiver.trim() !== "" && /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(receiver)) {
    //GmailApp.sendEmail(receiver, subject, body, {from: senderEmail});
    Logger.log("Email sent to " + receiver);
    console.log(subject + " " + body);
    
  }
}

function trigger() {
  // Create a time-based trigger to run the script weekly
  ScriptApp.newTrigger("mainV3")
    .timeBased()
    .everyWeeks(1)
    .onWeekDay(ScriptApp.WeekDay.MONDAY)
    .atHour(8) // Adjust to your desired time (uses a 24-hour time format)
    .create();
}
